"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("middleware",{

/***/ "(middleware)/./auth.ts":
/*!*****************!*\
  !*** ./auth.ts ***!
  \*****************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   auth: () => (/* binding */ auth),\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   handlers: () => (/* binding */ handlers),\n/* harmony export */   signIn: () => (/* binding */ signIn),\n/* harmony export */   signOut: () => (/* binding */ signOut)\n/* harmony export */ });\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth */ \"(middleware)/./node_modules/next-auth/index.js\");\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/providers/credentials */ \"(middleware)/./node_modules/next-auth/providers/credentials.js\");\n/* harmony import */ var _auth_prisma_adapter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @auth/prisma-adapter */ \"(middleware)/./node_modules/@auth/prisma-adapter/index.js\");\n/* harmony import */ var _db_prisma__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/db/prisma */ \"(middleware)/./db/prisma.ts\");\n/* harmony import */ var bcrypt_ts_edge__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! bcrypt-ts-edge */ \"(middleware)/./node_modules/bcrypt-ts-edge/dist/browser.mjs\");\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n// auth.ts (v5)\n\n\n\n\n\n\nconst config = {\n    pages: {\n        signIn: \"/sign-in\",\n        error: \"/sign-in\"\n    },\n    session: {\n        strategy: \"jwt\",\n        maxAge: 30 * 24 * 60 * 60\n    },\n    adapter: (0,_auth_prisma_adapter__WEBPACK_IMPORTED_MODULE_2__.PrismaAdapter)(_db_prisma__WEBPACK_IMPORTED_MODULE_3__.prisma),\n    providers: [\n        (0,next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({\n            credentials: {\n                email: {\n                    type: \"email\"\n                },\n                password: {\n                    type: \"password\"\n                }\n            },\n            async authorize (credentials) {\n                if (credentials == null) return null;\n                const user = await _db_prisma__WEBPACK_IMPORTED_MODULE_3__.prisma.user.findFirst({\n                    where: {\n                        email: credentials.email\n                    }\n                });\n                if (user && user.password) {\n                    const isMatch = (0,bcrypt_ts_edge__WEBPACK_IMPORTED_MODULE_4__.compareSync)(credentials.password, user.password);\n                    if (isMatch) {\n                        return {\n                            id: user.id,\n                            name: user.name,\n                            email: user.email,\n                            role: user.role\n                        };\n                    }\n                }\n                return null;\n            }\n        })\n    ],\n    callbacks: {\n        async session ({ session, user, trigger, token }) {\n            session.user.id = token.sub;\n            session.user.role = token.role;\n            session.user.name = token.name;\n            if (trigger === \"update\") {\n                session.user.name = token.name;\n            }\n            return session;\n        },\n        async jwt ({ token, user, trigger, session }) {\n            if (user) {\n                token.id = user.id;\n                token.role = user.role;\n                if (user.name === \"NO_NAME\") {\n                    token.name = user.email.split(\"@\")[0];\n                    //Update database to reflect the token name\n                    await _db_prisma__WEBPACK_IMPORTED_MODULE_3__.prisma.user.update({\n                        where: {\n                            id: user.id\n                        },\n                        data: {\n                            name: token.name\n                        }\n                    });\n                }\n            }\n            //Handle session updates\n            if (session?.user.name && trigger === \"update\") {\n                token.name = session.user.name;\n            }\n            return token;\n        },\n        authorized ({ request, auth }) {\n            //We check for the cookie. It's gonna be called sessioncartid and is gonna be a uuID to identify the users cart\n            // If is not there we want to create it\n            if (!request.cookies.get(\"sessionCartId\")) {\n                // Generate new session cart id cookie\n                const sessionCartId = crypto.randomUUID();\n                // Test if it works\n                // console.log(sessionCartId);\n                // return true;\n                // What we need to do now is to return a new response using next response and we need to have the headers and have the cookie that we create in the headers.\n                //So we need to clone the requsest headers\n                const newRequestHeaders = new Headers(request.headers);\n                //create new response and add the new headers\n                const response = next_server__WEBPACK_IMPORTED_MODULE_5__.NextResponse.next({\n                    request: {\n                        headers: newRequestHeaders\n                    }\n                });\n                // Now we want to generate the cookie and add it to the response\n                //Set newly generated sessionCartId in the response cookies\n                //We set the sessionCartId to the value that is in that sessionCartId variable\n                response.cookies.set(\"sessionCartId\", sessionCartId);\n                return response;\n            } else {\n                return true;\n            }\n        }\n    }\n};\nconst { handlers, auth, signIn, signOut } = (0,next_auth__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(config);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./auth.ts\n");

/***/ })

});